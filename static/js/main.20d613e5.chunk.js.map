{"version":3,"sources":["components/Searchbar/Searchbar.js","components/services/image-api.js","components/ImageErrorView/ImageErrorView.js","components/Loader/Loader.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/ImageInfo/ImageInfo.js","App.js","index.js"],"names":["Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","fetchImage","searchName","page","fetch","then","response","ok","json","Promise","reject","Error","ImageErrorView","message","role","ImageLoader","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","src","alt","createPortal","ImageGalleryItem","showModal","toggleModal","largeImageUrl","onClick","ImageGallery","images","map","image","index","webformatURL","tags","largeImageURL","Button","scroll","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","ImageInfo","error","status","onClickLoadMore","prevState","prevProps","prevName","nextName","prevPage","nextPage","newImages","total","hits","catch","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.20d613e5.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { ImSearch } from 'react-icons/im';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        imageName: '',\r\n    };\r\n\r\n    handleNameChange = event => {\r\n        this.setState({ imageName: event.currentTarget.value.toLowerCase() });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.imageName.trim() === '') {\r\n            toast('Enter the word');\r\n            return;\r\n        }\r\n\r\n        this.props.onSubmit(this.state.imageName);\r\n        this.setState({ imageName: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <ImSearch />\r\n                    </button>\r\n                    <input\r\n                        value={this.state.imageName}\r\n                        onChange={this.handleNameChange}\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                    \r\n                </form>\r\n            </header>\r\n        );\r\n    };\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Searchbar;","const KEY = '19027905-98233d65311b3fd13bc0a1406';\r\nfunction fetchImage(searchName, page) {\r\n    return fetch(`https://pixabay.com/api/?q=${searchName}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n\r\n        return Promise.reject(new Error(`No images`));\r\n    });\r\n}\r\n\r\nexport default fetchImage ;\r\n\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ImageErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Something went wrong. Error: {message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nImageErrorView.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageErrorView;","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nclass ImageLoader extends Component {\r\n  render() {\r\n    return (\r\n      <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageLoader;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n    };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n    };\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n      \r\n        const { src, alt } = this.props;\r\n\r\n        return createPortal(\r\n            <div className=\"Overlay\">\r\n                <div className=\"Modal\">\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    };\r\n};\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../Modal';\r\n\r\nclass ImageGalleryItem extends Component {\r\n    state = {\r\n        showModal: false,\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState(({ showModal }) => ({\r\n            showModal: !showModal,\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { src, alt, largeImageUrl } = this.props;\r\n        const { showModal } = this.state;\r\n        \r\n        return (\r\n            <li className=\"ImageGalleryItem\">\r\n                <img src={src}\r\n                    alt={alt}\r\n                    className=\"ImageGalleryItem-image\"\r\n                    onClick={this.toggleModal} />\r\n                {showModal && (\r\n                    <Modal src={largeImageUrl} alt={alt} onClose={this.toggleModal} />\r\n                )}\r\n            </li>\r\n        );\r\n    };\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nfunction ImageGallery({ images }) {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {images.map((image, index) => (\r\n                <ImageGalleryItem\r\n                    src={image.webformatURL}\r\n                    alt={image.tags}\r\n                    largeImageUrl={image.largeImageURL}\r\n                    key={index}\r\n                />\r\n            ))}           \r\n        </ul>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Button extends Component {\r\n    scroll = () => {\r\n        this.props.onClick();\r\n        setTimeout(() => {\r\n            window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: 'smooth',\r\n            });\r\n        }, 500);\r\n    };\r\n   \r\n    render() {\r\n        return (\r\n            <button type=\"button\" className=\"Button\" onClick={this.scroll}>\r\n                Load More\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Button;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport fetchImage from '../services/image-api';\r\nimport ImagesErrorView from '../ImageErrorView';\r\nimport ImageLoader from '../Loader';\r\nimport ImageGallery from '../ImageGallery';\r\nimport Button from '../Button';\r\n\r\nclass ImageInfo extends Component {\r\n  state = {\r\n    images: [],\r\n    error: null,\r\n    status: 'idle',\r\n    page: 1,\r\n  };\r\n\r\n  static propTypes = {\r\n    imageName: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevProps.imageName;\r\n    const nextName = this.props.imageName;\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n\r\n    if (prevName !== nextName) {\r\n      this.setState({ page: 1 });\r\n    }\r\n\r\n    if (prevName !== nextName || prevPage !== nextPage) {\r\n      this.setState({ status: 'pending' });\r\n\r\n        fetchImage(nextName, nextPage)\r\n          .then(newImages => {\r\n            if (newImages.total !== 0) {\r\n              this.setState(prevState => ({\r\n                images: [...prevState.images, ...newImages.hits],\r\n                status: 'resolved',\r\n              }));\r\n              return;\r\n            }\r\n\r\n            return Promise.reject(new Error('Invalid request'));\r\n          })\r\n          .catch(error => this.setState({ error, status: 'rejected' }));\r\n    }\r\n  };\r\n\r\n  onClickLoadMore = () => {\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { error, status } = this.state;\r\n\r\n    if (status === 'idle') {\r\n      return <p>Please enter the word</p>;\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return <ImageLoader />;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <ImagesErrorView message={error.message} />;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ImageGallery images={this.state.images} />\r\n          <Button onClick={this.onClickLoadMore} page={this.state.page} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageInfo;","import { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageInfo from './components/ImageInfo';\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        imageName: '',\r\n    };\r\n\r\n    handleFormSubmit = imageName => {\r\n        this.setState({ imageName });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Searchbar onSubmit={this.handleFormSubmit} />\r\n\r\n                <ImageInfo imageName={this.state.imageName} />\r\n                <ToastContainer autoClose={2000} />\r\n            </>\r\n        );\r\n    };\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// const elem1 = <span>Привет</span>;\n// const elem2 = <span>мир</span>;\n\n// const element = (\n//   <div>\n//     {elem1}\n//     {elem2}\n//   </div>\n// );\n// console.log(element);\n\n// ReactDOM.render(element, document.querySelector(\"#root\"));\n"],"sourceRoot":""}